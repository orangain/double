#!/usr/bin/env python

from __future__ import print_function, unicode_literals

import os
import argparse
import subprocess
import signal
import atexit


def main():
    parser = argparse.ArgumentParser(
        description='Execute a background process behind a foreground process.')
    parser.add_argument('foreground', metavar='FOREGROUND_COMMAND',
                        help='Foreground command')
    parser.add_argument('args', nargs=argparse.REMAINDER,
                        metavar='...', help='Foreground command args')
    parser.add_argument('-b', '--background', dest='background', required=True,
                        metavar='BACKGROUND_COMMAND', help='background proccess')

    args = parser.parse_args()

    # Create new process group
    os.setpgrp()

    def kill_process_group():
        try:
            # kill whole process group
            os.kill(0, signal.SIGINT)
        except KeyboardInterrupt:
            pass

    atexit.register(kill_process_group)

    try:
        subprocess.Popen(args.background, shell=True)
        subprocess.call([args.foreground] + args.args)
    except KeyboardInterrupt:
        pass


if __name__ == '__main__':
    main()
